import React, {useState, useEffect, useCallback, useRef} from "react";
import axios from "../axios_intance";
import BootstrapTable from 'react-bootstrap-table-next';
import paginationFactory from 'react-bootstrap-table2-paginator';
import $ from 'jquery';


const 产品种类表格 = () => {
    const [productCategory, setProductCategory] = useState([]);


    const [第1次数据, set第1次数据] = useState([]);
    const [第2次数据, set第2次数据] = useState([]);


    useEffect(() => {
        const fetch1 = async () => {
            const aaa = await axios.get("/产品/产品种类")
            set第1次数据(aaa.data)



            // 一次获取所有需要的count,可以避免多次重渲染
            // await axios.post("/product/category2/", {list: aaa.data}).then(bbb => {
            //     set第1次数据(bbb.data)
            // })
            const bbb = await axios.post("/product/category2/", {list: aaa.data})
            set第1次数据(bbb.data)


            // // 分开多次获取需要的count,需要指定 attrs, 且出现多次重渲染
            // aaa.data.map(async (one) => {
            //     const bbb = await axios.get("/product/category/" + one.id)
            //     var count = bbb.data.count
            //     // set第2次数据(count)  ★★★注意先后顺序,放在这里,会出现数组之后一项的count没有数据显示
            //     console.log(one.id + "," + one.name + ":" + count)
            //     one.count = count
            //     set第2次数据(count) // ★★★必须放在one的数据也被重新赋值之后
            // })

        }
        fetch1()

    }, [])


    // useEffect(() => {
    //     const fetch1 = async () => {
    //         const aaa = await axios.get("/产品/产品种类")
    //         set第1次数据(aaa.data)
    //
    //         aaa.data.map(async (one) => {
    //             const bbb = await axios.get("/product/category/" + one.id)
    //             var count = bbb.data.count
    //             // set第2次数据(count)  ★★★注意先后顺序,放在这里,会出现数组之后一项的count没有数据显示
    //             console.log(one.id + "," + one.name + ":" + count)
    //             one.count = count
    //             set第2次数据(count) // ★★★必须放在one的数据也被重新赋值之后
    //         })
    //
    //     }
    //     fetch1()
    //
    // }, [])


    // 非等待的也相同
    // useEffect(() => {
    //     axios.get("/产品/产品种类").then(aaa => {
    //         set第1次数据(aaa.data)
    //
    //         aaa.data.map((one) => {
    //             axios.get("/product/category/" + one.id).then(bbb => {
    //                 var count = bbb.data.count
    //                 // set第2次数据(count) 注意先后顺序,放在这里,会出现数组之后一项的count没有数据显示
    //                 console.log(one.id + "," + one.name + ":" + count)
    //                 one.count = count
    //                 set第2次数据(count) // 必须放在one的数据也被重新赋值之后
    //             })
    //         })
    //     })
    //
    // }, [])


    // ★★★ 必须要有么,才显示count的值
    const attrs = (cell, row, rowIndex, colIndex) => {
        // return {'dataid': row.id, 'count': row.count}
        // return {'dataid': row.id, 'name': row.name}
        console.log(row)
        // 重复输出好多次
        return {}
    }



    // console.log("产品种类表格")
    //
    // 所以,不需要使用jquery进行数据的显示
    // $(function () {
    //     // $("td[dataid]").each(function (i, n) {
    //     //     var dataid = $(n).attr("dataid")
    //     //     axios.get("/product/category/" + dataid).then(res => {
    //     //         var v = res.data.count
    //     //         $(n).text(v)
    //     //     })
    //     // })
    // })



    const columns = [
        {
            dataField: 'id',
            text: '#'
        },
        {
            dataField: 'parentId',
            text: '父层ID'
        },
        {
            dataField: 'name',
            text: '种类名称'
        },
        {
            dataField: "count",
            text: "该类产品的数量",
            // attrs: attrs
        }
    ];






    return (
        <div>
            <BootstrapTable keyField='id' data={第1次数据} columns={columns} />
            {/*<BootstrapTable keyField='id' data={productCategory} columns={columns} />*/}
        </div>

    )
}

export default 产品种类表格